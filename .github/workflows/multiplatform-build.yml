name: Data Structures Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Release]
        cpp_compiler: [gcc, clang]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install VCpkg & GTest for Windows build
      if: matrix.os == 'windows-latest'
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.bat
        ./vcpkg/vcpkg install gtest

    - name: Install Build-Essentials & GTest for Ubuntu build
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y build-essential
        sudo apt-get install -y libgtest-dev
        cd /usr/src/gtest
        sudo cmake .
        sudo make
        sudo cp ./lib/libgtest.a /usr/lib
        sudo cp ./lib/libgtest_main.a /usr/lib

    - name: Set reusable strings
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}${{ matrix.os == 'windows-latest' && '/vcpkg/scripts/buildsystems/vcpkg.cmake' || '' }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.cpp_compiler }}
        path: ${{ steps.strings.outputs.build-output-dir }}
