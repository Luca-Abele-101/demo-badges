name: Data Stuctures Building Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # true if stable, false if thorough testing
      fail-fast: false
      # Build List:
      # 1. <Windows, Release, latest GCC compiler, default generator>
      # 2. <Linux, Release, latest GCC compiler, default generator>
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]

        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: gcc
        #exclude:
        #  - os: windows-latest
        #    c_compiler: clang
        #  - os: ubuntu-latest
        #    c_compiler: cl

    steps:
    - uses: actions/checkout@v4
    
    - name: Install GTest for Windows build
      if: matrix.os == 'windows-latest'
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.bat
        ./vcpkg/vcpkg install gtest

    - name: Install GTest for Ubuntu build
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y libgtest-dev
        cd /usr/src/gtest
        sudo cmake .
        sudo make ###
        cd /usr/src/gtest
        ls -l
        sudo cp libgtest.a /usr/lib
        sudo cp libgtest_main.a /usr/lib


    - name: Set reusable strings
      # Turn repeated input strings into step outputs
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --build-config ${{ matrix.build_type }}
